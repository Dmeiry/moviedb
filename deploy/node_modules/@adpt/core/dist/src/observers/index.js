"use strict";
/*
 * Copyright 2018-2019 Unbounded Systems, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isObserverNeedsData = exports.patchInNewQueries = exports.Observer = exports.makeObserverManagerDeployment = exports.observe = exports.registerObserver = exports.simplifyNeedsData = exports.createObserverManagerDeployment = exports.throwObserverErrors = exports.ObserverNeedsData = exports.gql = void 0;
const tslib_1 = require("tslib");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const errors_1 = require("./errors");
exports.gql = graphql_tag_1.default;
var errors_2 = require("./errors");
Object.defineProperty(exports, "ObserverNeedsData", { enumerable: true, get: function () { return errors_2.ObserverNeedsData; } });
Object.defineProperty(exports, "throwObserverErrors", { enumerable: true, get: function () { return errors_2.throwObserverErrors; } });
var obs_manager_deployment_1 = require("./obs_manager_deployment");
Object.defineProperty(exports, "createObserverManagerDeployment", { enumerable: true, get: function () { return obs_manager_deployment_1.createObserverManagerDeployment; } });
Object.defineProperty(exports, "simplifyNeedsData", { enumerable: true, get: function () { return obs_manager_deployment_1.simplifyNeedsData; } });
var registry_1 = require("./registry");
Object.defineProperty(exports, "registerObserver", { enumerable: true, get: function () { return registry_1.registerObserver; } });
Object.defineProperty(exports, "observe", { enumerable: true, get: function () { return registry_1.observe; } });
Object.defineProperty(exports, "makeObserverManagerDeployment", { enumerable: true, get: function () { return registry_1.makeObserverManagerDeployment; } });
var Observer_1 = require("./Observer");
Object.defineProperty(exports, "Observer", { enumerable: true, get: function () { return Observer_1.Observer; } });
function patchInNewQueries(observations, queries) {
    for (const name in observations) {
        if (!Object.hasOwnProperty.call(observations, name))
            continue;
        if (queries[name] !== undefined) {
            observations[name].queries = queries[name];
        }
    }
}
exports.patchInNewQueries = patchInNewQueries;
function isObserverNeedsData(e) {
    return e instanceof errors_1.ObserverNeedsData;
}
exports.isObserverNeedsData = isObserverNeedsData;
//# sourceMappingURL=index.js.map